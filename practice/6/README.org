* 第6章

** 再探while循环
   伪代码: pseudocode

** while语句
   格式:
   #+begin_src c
     while (expression)
         statement
   #+end_src
   statement 可以是分号结尾的 *简单语句*, 也可以是用花括号括起来的 *复合语句*
   expression为非0, 跳出执行

*** 语法要点
    诸如 ~while (n++ < 3);~ 结尾为单独一个分号被视为一条语句 - 空语句(null
    statement)
    有时使用带空语句的while语句跳过第一个非空白字符或数字:
    #+begin_src c
      while (scanf("%d", &num) == 1)
          ;//跳过整数输入
    #+end_src
    只要scanf()读取一个整数, 就会返回1, 循环继续执行.
    *建议* 该分号单独占一行

** 用关系运算符和表达式比较大小

*** 其他真值
    非0即为真

*** 新的 _Bool类型
    ~stdbool.h~ 头文件:
    让bool成为_Bool的别名, 而且还把true和false分别定义为1和0符号常量. 包含该头文
    件后, 写出的代码可以与C++兼容, 因为C++把bool, true和false定义为关键字

*** 优先级和关系运算符
    关系运算符的优先级比算术运算符(包括+和-)低, 比赋值运算符高
    关系运算符优先级表
    | 优先级组 | 符号         |
    |----------+--------------|
    | 高       | <, <=, >, >= |
    | 低       | ==, !=       |

** 不确定循环和计数循环
   
    
